
---------------------------------------------------------------------------------
--공동구매 상세 페이지 프로젝트와 구매 퍼센트 관련 VIEW
CREATE OR REPLACE VIEW V_PROJECTDETAIL_GROUPPAR(
PROJECT_ID, PROJECT_NAME, MEMBER_NAME, IMAGE_RENAME, REP_CONTENT, START_DATE, END_DATE,
DDAY, PAYMENT_DATE, REFUND_ROLE, VIDEO_URL, CONTENT, PROJECT_CATEGORY_ID, 
PROJECT_CATEGORY_NAME, CATEGORY_SUB_ID, CATEGORY_SUB_NAME, CATEGORY_ID, 
CATEGORY_NAME, TARGET_AMOUNT, PERCENT
)
AS
    SELECT P.PROJECT_ID, 
           PROJECT_NAME,
           M.MEMBER_NAME, 
           IMAGE_RENAME,
           REP_CONTENT, 
           START_DATE,
           END_DATE, 
           FLOOR(END_DATE-sysdate) AS DDAY,
           PAYMENT_DATE, 
           REFUND_ROLE, 
           VIDEO_URL, 
           CONTENT, 
           P.PROJECT_CATEGORY_ID, 
           PROJECT_CATEGORY_NAME,
           P.CATEGORY_SUB_ID, 
           CATEGORY_SUB_NAME, 
           CS.CATEGORY_ID, 
           CATEGORY_NAME,
           TARGET_AMOUNT,
            ROUND(NVL((SELECT SUM(NVL(PAYTOTAL.COUNT, 0)) AS SUM_PAY_COUNT
                        FROM PRODUCT PROD
                        LEFT JOIN (SELECT PAY.PROJECT_ID,
                                          PAYC.PRODUCT_ID,
                                          COUNT
                                    FROM PAYMENT PAY
                                    JOIN PAYMENT_COUNT PAYC ON(PAY.PAYMENT_ID = PAYC.PAYMENT_ID)
                                    WHERE PAYC.PRODUCT_ID IS NOT NULL) PAYTOTAL ON(PAYTOTAL.PRODUCT_ID = PROD.PRODUCT_ID)
                        WHERE PROD.PROJECT_ID = P.PROJECT_ID
                        GROUP BY (PROD.PROJECT_ID)),0)/NVL(TARGET_AMOUNT,0)*100) AS PERCENT
    FROM PROJECT P
    LEFT JOIN PROJECT_CONTENT CT ON(P.PROJECT_ID = CT.PROJECT_ID)
    JOIN PROJECT_CATEGORY PC ON(P.PROJECT_CATEGORY_ID = PC.PROJECT_CATEGORY_ID)
    JOIN CATEGORY_SUB CS ON(P.CATEGORY_SUB_ID = CS.CATEGORY_SUB_ID)
    JOIN CATEGORY C ON(CS.CATEGORY_ID = C.CATEGORY_ID)
    JOIN MEMBER M ON(P.MEMBER_ID=M.MEMBER_ID)
    WHERE PC.PROJECT_CATEGORY_ID = 'PC-PROD'
;


--상세 페이지에 보여줄 물품 목록과 갯수
CREATE OR REPLACE VIEW V_PRODUCT_DETAIL(
PROJECT_ID, PRODUCT_ID, PRODUCT_NAME, MINCOUNT, REST_COUNT, PAY_COUNT, PAYMENT_DATE
)
AS
    SELECT PROD.PROJECT_ID,
           PROD.PRODUCT_ID,
           PROD.PRODUCT_NAME,
           PROD.MINCOUNT,
           PROD.MINCOUNT - NVL(PAYC.COUNT, 0) AS REST_COUNT,
           NVL(PAYC.COUNT, 0) AS PAY_COUNT,
           PAYMENT_DATE + 7
    FROM PRODUCT PROD
    LEFT JOIN PAYMENT_COUNT PAYC ON(PROD.PRODUCT_ID = PAYC.PRODUCT_ID)
    JOIN PROJECT P ON(P.PROJECT_ID = PROD.PROJECT_ID)
    ORDER BY PROD.PRODUCT_ID
;

--콘지수 불러오기
CREATE OR REPLACE VIEW V_CORNGRADE(
MEMBER_ID, CORNGRADE_AVG
)
AS 
    SELECT MEMBER_ID,
       (CASE
            WHEN NOTNUMCOUNT > 0 THEN SUM_AVGCG / NOTNUMCOUNT
            WHEN NOTNUMCOUNT = 0 THEN 0 END) AS FINAL_AVG
    FROM( SELECT MEMBER_ID,
                 SUM(CORNGRADE_AVG) AS SUM_AVGCG,
                 SUM(CASE 
                      WHEN CORNGRADE_AVG > 0 THEN 1 
                      WHEN CORNGRADE_AVG = 0 THEN 0 END) AS NOTNUMCOUNT
          FROM( SELECT M.MEMBER_ID,
                       P.PROJECT_ID,
                       NVL(CORNGRADE_AVG, 0) AS CORNGRADE_AVG
                FROM MEMBER M
                JOIN PROJECT P ON(P.MEMBER_ID = M.MEMBER_ID)
                LEFT JOIN (SELECT PROJECT_ID,
                                  ROUND(SUM(CORN_GRADE) / COUNT(CORN_GRADE), 1) AS CORNGRADE_AVG
                           FROM MEMBER_TRUST
                           GROUP BY PROJECT_ID) MTV ON(MTV.PROJECT_ID = P.PROJECT_ID)
              )
          GROUP BY MEMBER_ID
        )
;
---------------------------------------------------------------------------------
--프로젝트 업데이트 페이지에서 사용하는 view
CREATE OR REPLACE VIEW V_PROJECTSTATUSUPDATE(
PROJECT_ID, PROJECT_CATEGORY_ID, CATEGORY_SUB_ID, PROJECT_NAME, 
MEMBER_ID, IMAGE_ORINAME, IMAGE_RENAME, REP_CONTENT, TARGET_AMOUNT,
CREATION_DATE, START_DATE, END_DATE, PAYMENT_DATE, 
REFUND_ROLE, PROJECT_REQUEST_FLAG, PROJECT_ONOFF_FLAG, REPORT_COUNT, 
CERTIF_FLAG, CATEGORY_ID
)
AS 
SELECT P.PROJECT_ID,
       P.PROJECT_CATEGORY_ID,
       P.CATEGORY_SUB_ID,
       P.PROJECT_NAME,
       P.MEMBER_ID,
       P.IMAGE_ORINAME,
       P.IMAGE_RENAME,
       P.REP_CONTENT,
       P.TARGET_AMOUNT,
       P.CREATION_DATE,
       P.START_DATE,
       P.END_DATE,
       P.PAYMENT_DATE,
       P.REFUND_ROLE,
       P.PROJECT_REQUEST_FLAG,
       P.PROJECT_ONOFF_FLAG,
       P.REPORT_COUNT,
       P.CERTIF_FLAG,
       CS.CATEGORY_ID
FROM PROJECT P 
LEFT JOIN CATEGORY_SUB CS ON(P.CATEGORY_SUB_ID = CS.CATEGORY_SUB_ID)
LEFT JOIN CATEGORY C ON(CS.CATEGORY_ID = C.CATEGORY_ID)
;

--프로젝트 업데이트 페이지에서 사용하는 giftinItem 용 view
CREATE OR REPLACE VIEW V_GIFTINITEMSUPDATE(
GIFT_ID, ITEM_ID, COUNT, PROJECT_ID
)
AS 
SELECT GII.GIFT_ID,
       GII.ITEM_ID,
       GII.COUNT,
       G.PROJECT_ID
FROM GIFT_IN_ITEMS GII 
LEFT JOIN GIFT G ON(GII.GIFT_ID = G.GIFT_ID)
;



---------------------------------------------------------------------
--실시간 인기 top5
CREATE OR REPLACE VIEW V_PAY_EXPECTATION_TOP5(
RANK_NUM, PROJECT_ID, PROJECT_NAME, PROJECT_CATEGORY_ID, IMAGE_RENAME
) AS 
SELECT ROWNUM,
       PROJECT_ID,
       PROJECT_NAME,
       PROJECT_CATEGORY_ID,
       IMAGE_RENAME
FROM(   SELECT PROJECT_ID,
               PROJECT_NAME,
               PROJECT_CATEGORY_ID,
               IMAGE_RENAME,
               ROUND(AMOUNT_COUNT/PERCEN, 2) AS EXPECTATION
        FROM(SELECT PROJECT_ID,
                   PROJECT_NAME,
                   PROJECT_CATEGORY_ID,
                   IMAGE_RENAME,
                   AMOUNT_SUM,
                   (SELECT AVG(AMOUNT_SUM)
                    FROM(SELECT SUM(TOTAL_AMOUNT) AS AMOUNT_SUM
                        FROM PAYMENT
                        GROUP BY PROJECT_ID)) AS AVERAGE,
                   CEIL((AMOUNT_SUM/(SELECT AVG(AMOUNT_SUM)
                    FROM(SELECT SUM(TOTAL_AMOUNT) AS AMOUNT_SUM
                        FROM PAYMENT
                        GROUP BY PROJECT_ID)))*100) AS PERCEN,
                    AMOUNT_COUNT     
            FROM(SELECT PRO.PROJECT_ID,
                        PRO.PROJECT_NAME,
                        PRO.PROJECT_CATEGORY_ID,
                        PRO.IMAGE_RENAME,
                        SUM(TOTAL_AMOUNT) AS AMOUNT_SUM,
                        COUNT(TOTAL_AMOUNT) AS AMOUNT_COUNT
                FROM PAYMENT PAY
                JOIN PROJECT PRO ON(PAY.PROJECT_ID = PRO.PROJECT_ID)
                GROUP BY PRO.PROJECT_ID, PRO.PROJECT_NAME,
                       PRO.PROJECT_CATEGORY_ID, PRO.IMAGE_RENAME)
        )
        ORDER BY EXPECTATION DESC
)
WHERE ROWNUM < 6
;

--실시간 구매 수 top5
CREATE OR REPLACE VIEW V_PAY_COUNT_TOP5(
RANK_NUM, PROJECT_ID, PROJECT_NAME, PROJECT_CATEGORY_ID, IMAGE_RENAME
) AS 
SELECT ROWNUM,
       PROJECT_ID,
       PROJECT_NAME,
       PROJECT_CATEGORY_ID,
       IMAGE_RENAME
FROM(
    SELECT PRO.PROJECT_ID,
           PRO.PROJECT_NAME,
           PRO.PROJECT_CATEGORY_ID,
           PRO.IMAGE_RENAME,
           COUNT(PAY.TOTAL_AMOUNT) AS AMOUNT_COUNT
    FROM PAYMENT PAY
    JOIN PROJECT PRO ON(PRO.PROJECT_ID = PAY.PROJECT_ID)
    GROUP BY PRO.PROJECT_ID, PRO.PROJECT_NAME, 
                PRO.PROJECT_CATEGORY_ID, PRO.IMAGE_RENAME
    ORDER BY COUNT(TOTAL_AMOUNT) DESC
)
WHERE ROWNUM < 6
;

--실시간 총 후원금 top5
CREATE OR REPLACE VIEW V_PAY_AMOUNT_TOP5(
RANK_NUM, PROJECT_ID, PROJECT_NAME, PROJECT_CATEGORY_ID, IMAGE_RENAME
)
AS
SELECT ROWNUM,
       PROJECT_ID,
       PROJECT_NAME,
       PROJECT_CATEGORY_ID,
       IMAGE_RENAME
FROM(
    SELECT PRO.PROJECT_ID,
           PRO.PROJECT_NAME,
           PRO.PROJECT_CATEGORY_ID,
           PRO.IMAGE_RENAME,
           SUM(PAY.TOTAL_AMOUNT) AS AMOUNT_SUM
    FROM PAYMENT PAY
    JOIN PROJECT PRO ON(PRO.PROJECT_ID = PAY.PROJECT_ID)
    GROUP BY PRO.PROJECT_ID, PRO.PROJECT_NAME, 
                PRO.PROJECT_CATEGORY_ID, PRO.IMAGE_RENAME
    ORDER BY SUM(TOTAL_AMOUNT) DESC
)
WHERE ROWNUM < 6
;
